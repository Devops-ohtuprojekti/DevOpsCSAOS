name: Deploy

on: [push]

jobs:
  build:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Run end-to-end
        working-directory: ./end-to-end-tests
        run: python3 -m venv env && source env/bin/activate && pip install -r requirements.txt && webdrivermanager firefox && echo "[default]
          dbapiModuleName=psycopg2
          dbName=test_db
          dbUsername=postgres
          dbPassword=postgres
          dbHost=localhost
          dbPort=5432" > db.cfg && cd .. && npm install && cd frontend/ && npm install && cd .. &&s npm run start:robot && robot tests
      - name: Run backend lint
        working-directory: ./backend
        run: npm run lint
      - name: Run frontend lint
        working-directory: ./frontend
        run: npm run lint
      - name: Run backend tests
        working-directory: ./backend
        # install dependencies and create the necessary databases before running tests
        run: npm install && createdb -h localhost -p 5432 -U postgres dev_db && createdb -h localhost -p 5432 -U postgres prod_db && npm test
        env:
          DB_HOST: localhost
          DB_PASS: postgres
          DB_USER: postgres
          # createdb requires a password that has to be supplied as environment variable
          PGPASSWORD: postgres
          NODE_ENV: test
      - name: Run frontend tests
        working-directory: ./frontend
        run: npm install && npm test
      - name: Test image building
        run: docker build . -t image-test-build

  deploy_to_staging:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.8.9
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'ohtu-csaos-staging'
          heroku_email: ${{secrets.PROJECT_EMAIL}}
          usedocker: true
